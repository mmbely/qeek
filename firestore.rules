rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }
    
    function getAccount(accountId) {
      return get(/databases/$(database)/documents/accounts/$(accountId));
    }
    
    function isAccountMember(accountId) {
      return isSignedIn() && 
        exists(/databases/$(database)/documents/accounts/$(accountId)) &&
        request.auth.uid in getAccount(accountId).data.members;
    }
    
    function isTicketInAccount(ticketData) {
      return isAccountMember(ticketData.accountId);
    }

    match /tickets/{ticketId} {
      allow read: if isTicketInAccount(resource.data);
      allow create: if isTicketInAccount(request.resource.data);
      allow update: if isTicketInAccount(resource.data) && 
                      isTicketInAccount(request.resource.data) &&
                      resource.data.accountId == request.resource.data.accountId;
      allow delete: if isTicketInAccount(resource.data);
    }

    match /accounts/{accountId} {
      allow read: if isAccountMember(accountId);
      allow write: if isAccountMember(accountId) && 
                     request.auth.uid in resource.data.members &&
                     request.auth.uid in request.resource.data.members;
    }
  }
}
